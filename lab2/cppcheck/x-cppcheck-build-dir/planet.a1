<?xml version="1.0"?>
<analyzerinfo hash="15567358293038889561">
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;iostream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="C:\Users\kusneid\Documents\labs2\lab2\planet\planet.h" line="5" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;fstream&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="C:\Users\kusneid\Documents\labs2\lab2\planet\planet.h" line="6" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;cstring&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="C:\Users\kusneid\Documents\labs2\lab2\planet\planet.h" line="7" column="0"/>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results." verbose="Include file: &lt;algorithm&gt; not found. Please note: Cppcheck does not need standard library headers to get proper results.">
            <location file="C:\Users\kusneid\Documents\labs2\lab2\planet\planet.h" line="8" column="0"/>
        </error>
        <error id="copyCtorPointerCopying" severity="warning" msg="Value of pointer &apos;planetName&apos;, which points to allocated memory, is copied in copy constructor instead of allocating new memory." verbose="Value of pointer &apos;planetName&apos;, which points to allocated memory, is copied in copy constructor instead of allocating new memory." cwe="398" file0="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.cpp">
            <location file="C:\Users\kusneid\Documents\labs2\lab2\planet\planet.h" line="75" column="9"/>
            <symbol>planetName</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;isSorted&apos; can be reduced." verbose="The scope of the variable &apos;isSorted&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.cpp">
            <location file="C:\Users\kusneid\Documents\labs2\lab2\planet\planet.cpp" line="80" column="10"/>
            <symbol>isSorted</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;planetNameToSet&apos; can be declared as pointer to const" verbose="Parameter &apos;planetNameToSet&apos; can be declared as pointer to const" cwe="398" file0="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.cpp">
            <location file="C:\Users\kusneid\Documents\labs2\lab2\planet\planet.h" line="22" column="30" info="Parameter &apos;planetNameToSet&apos; can be declared as pointer to const"/>
            <symbol>planetNameToSet</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;mas&apos; can be declared as pointer to const" verbose="Parameter &apos;mas&apos; can be declared as pointer to const" cwe="398" file0="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.cpp">
            <location file="C:\Users\kusneid\Documents\labs2\lab2\planet\planet.cpp" line="18" column="30" info="Parameter &apos;mas&apos; can be declared as pointer to const"/>
            <symbol>mas</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;mas&apos; can be declared as pointer to const" verbose="Parameter &apos;mas&apos; can be declared as pointer to const" cwe="398" file0="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.cpp">
            <location file="C:\Users\kusneid\Documents\labs2\lab2\planet\planet.cpp" line="26" column="31" info="Parameter &apos;mas&apos; can be declared as pointer to const"/>
            <symbol>mas</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;mas&apos; can be declared as pointer to const" verbose="Parameter &apos;mas&apos; can be declared as pointer to const" cwe="398" file0="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.cpp">
            <location file="C:\Users\kusneid\Documents\labs2\lab2\planet\planet.cpp" line="79" column="27" info="Parameter &apos;mas&apos; can be declared as pointer to const"/>
            <symbol>mas</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;planetToFind&apos; can be declared as pointer to const" verbose="Parameter &apos;planetToFind&apos; can be declared as pointer to const" cwe="398" file0="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.cpp">
            <location file="C:\Users\kusneid\Documents\labs2\lab2\planet\planet.cpp" line="100" column="31" info="Parameter &apos;planetToFind&apos; can be declared as pointer to const"/>
            <symbol>planetToFind</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;curID&apos; is assigned a value that is never used." verbose="Variable &apos;curID&apos; is assigned a value that is never used." cwe="563" file0="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.cpp">
            <location file="C:\Users\kusneid\Documents\labs2\lab2\planet\planet.cpp" line="127" column="15"/>
            <symbol>curID</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.h:105:21" call-funcname="FindID" call-argnr="1" file="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.cpp" line="116" col="23" call-argexpr="planetName" call-argvaluetype="7" call-argvalue="30">
  <path file="C:\Users\kusneid\Documents\labs2\lab2\planet\planet.cpp" line="115" col="22" info="Assign planetName, buffer with size 30"/>
</function-call><function-call call-id="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.h:105:21" call-funcname="FindID" call-argnr="2" file="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.cpp" line="116" col="17" my-id="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.h:106:17" my-argnr="1"/>
<function-call call-id="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.h:105:21" call-funcname="FindID" call-argnr="2" file="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.cpp" line="127" col="17" my-id="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.h:107:17" my-argnr="1"/>
  </FileInfo>
  <FileInfo check="Bounds checking">
    <pointer-arith>
    <unsafe-usage my-id="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.h:101:17" my-argnr="2" my-argname="size" file="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.cpp" line="7" col="9" value="8"/>
    </pointer-arith>
  </FileInfo>
  <FileInfo check="Class">
<class name="Planet" file="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.h" line="10" col="1" hash="7784568538351180387"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.h:22:10" my-argnr="1" my-argname="planetNameToSet" file="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.h" line="23" col="33" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.h:22:10" my-argnr="1" my-argname="planetNameToSet" file="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.h" line="23" col="33" value="0"/>
    <unsafe-usage my-id="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.h:73:5" my-argnr="1" my-argname="planetToCopy" file="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.h" line="75" col="22" value="0"/>
    <unsafe-usage my-id="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.h:110:15" my-argnr="1" my-argname="in" file="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.cpp" line="39" col="5" value="0"/>
    <unsafe-usage my-id="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.h:110:15" my-argnr="2" my-argname="planet" file="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.cpp" line="40" col="12" value="0"/>
    <unsafe-usage my-id="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.h:111:15" my-argnr="1" my-argname="out" file="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.cpp" line="57" col="5" value="0"/>
    <unsafe-usage my-id="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.h:111:15" my-argnr="2" my-argname="planet" file="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.cpp" line="57" col="10" value="0"/>
    <unsafe-usage my-id="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.h:112:6" my-argnr="1" my-argname="first" file="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.cpp" line="62" col="9" value="0"/>
    <unsafe-usage my-id="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.h:112:6" my-argnr="2" my-argname="second" file="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.cpp" line="62" col="29" value="0"/>
    <unsafe-usage my-id="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.h:113:6" my-argnr="1" my-argname="first" file="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.cpp" line="70" col="9" value="0"/>
    <unsafe-usage my-id="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.h:113:6" my-argnr="2" my-argname="second" file="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.cpp" line="70" col="32" value="0"/>
    <unsafe-usage my-id="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.h:106:17" my-argnr="2" my-argname="size" file="C:/Users/kusneid/Documents/labs2/lab2/planet/planet.cpp" line="116" col="40" value="0"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="SetPlanetName" lineNumber="22"/>
    <functiondecl functionName="SetDiameter" lineNumber="26"/>
    <functiondecl functionName="SetHaveLife" lineNumber="30"/>
    <functiondecl functionName="SetSatellites" lineNumber="34"/>
    <functiondecl functionName="GetPlanetName" lineNumber="38"/>
    <functiondecl functionName="GetDiameter" lineNumber="42"/>
    <functiondecl functionName="GetHaveLife" lineNumber="46"/>
    <functiondecl functionName="GetSatellites" lineNumber="50"/>
    <functiondecl functionName="GetID" lineNumber="54"/>
    <functiondecl functionName="AddPlanet" lineNumber="3"/>
    <functiondecl functionName="PrintDB" lineNumber="18"/>
    <functiondecl functionName="DBtoFile" lineNumber="26"/>
    <functiondecl functionName="Sort" lineNumber="79"/>
    <functiondecl functionName="FindID" lineNumber="100"/>
    <functiondecl functionName="DeletePlanet" lineNumber="114"/>
    <functiondecl functionName="EditPlanetValues" lineNumber="123"/>
    <functioncall functionName="FindID"/>
    <functioncall functionName="GetDiameter"/>
    <functioncall functionName="GetHaveLife"/>
    <functioncall functionName="GetPlanetName"/>
    <functioncall functionName="GetSatellites"/>
    <functioncall functionName="Planet"/>
    <functioncall functionName="SetDiameter"/>
    <functioncall functionName="SetHaveLife"/>
    <functioncall functionName="SetPlanetName"/>
    <functioncall functionName="SetSatellites"/>
    <functioncall functionName="false"/>
    <functioncall functionName="strcmp"/>
    <functioncall functionName="strcpy"/>
    <functioncall functionName="true"/>
  </FileInfo>
</analyzerinfo>
